# Define the user and worker processes
user nginx;
worker_processes auto;

# Global settings
events {
    worker_connections 1024;
}

# HTTP server configuration
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format and access/error logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Configure upstream servers
    upstream travel_service {
        server travel-service:8080; # Adjust this based on your Docker setup
    }

    upstream accommodation_service {
        server accommodation-service:8080; # Adjust this based on your Docker setup
    }

    upstream attraction_service {
        server attraction-service:8080; # Adjust this based on your Docker setup
    }

    # Main server configuration
    server {
        listen 80;
        server_name localhost;

        # Route requests to different microservices
        location /travel/ {
            proxy_pass http://travel_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /accommodation/ {
            proxy_pass http://localhost:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /attractions/ {
            proxy_pass http://attraction_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
